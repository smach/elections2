[{"path":"https://smach.github.io/elections2/articles/barcharts.html","id":"interactive-html-graphs","dir":"Articles","previous_headings":"","what":"Interactive HTML graphs","title":"Barcharts","text":"can turn graphs interactive HTML versions plotly package’s ggplotly function.","code":"plotly::ggplotly(     bargraph_of_margins(my_election_data, Precinct, Yes_Pct_Margin, theme = theme_classic()) +     scale_y_continuous(labels = scales::percent) )"},{"path":"https://smach.github.io/elections2/articles/intro.html","id":"data-wrangling","dir":"Articles","previous_headings":"","what":"Data wrangling","title":"Intro","text":"use elections2 elections data, start one package functions wrangle spreadsheet CSV file election results. ’ve got two options: wrangle_results() generate detailed results file two candidates choices; wrangle_more_cols() results two choices.","code":""},{"path":"https://smach.github.io/elections2/articles/intro.html","id":"data-with-only-2-choices","dir":"Articles","previous_headings":"Data wrangling","what":"Data with only 2 choices","title":"Intro","text":"wrangle_results() want compare performance two candidates yes-ballot question. means don’t wish include additional results third parties, write-ins, blanks. function returns winner, percents, percent vote margins row well overall total. function also turnout_columns option data includes columns vote totals total registered voters ’d like calculate turnout percentage. running wrangle_results() data, can use package’s visualization functions results create tables, bar graphs, maps.","code":""},{"path":"https://smach.github.io/elections2/articles/intro.html","id":"data-format","dir":"Articles","previous_headings":"Data wrangling > Data with only 2 choices","what":"Data format","title":"Intro","text":"wrangle_results() needs data specific format. CSV file spreadsheet (R object) doesn’t include turnout data, election results file must following 3-column format: Column 1 election districts (precinct, city, county, etc.). Columns 2 3 candidates’ names, “Yes” “” ballot questions, etc. values raw vote totals percents.  include column row totals file! data turnout information, set turnout_columns = TRUE argument wrangle_results(). data needs total number votes column 4 total number registered voters column 5. Don’t include column turnout percent, calculated wrangle_results(). result wrangle_results() format : includes Total row. Per user request, wrangle_results() also can take name data frame data proper format. name object must quotation marks.","code":"library(elections2) results_file <- system.file(\"extdata\", \"FakeElectionResults.xlsx\", package = \"elections2\")  my_election_data <- wrangle_results(results_file) head(my_election_data, n = 3) #>   Precinct  No Yes Total Winner Yes_Pct No_Pct Yes_Pct_Margin Yes_Margin #> 1        1 603 755  1358    Yes   0.556  0.444          0.112        152 #> 2        2 630 844  1474    Yes   0.573  0.427          0.146        214 #> 3        3 764 657  1421     No   0.462  0.538         -0.076       -107"},{"path":"https://smach.github.io/elections2/articles/intro.html","id":"data-with-3-or-more-choices","dir":"Articles","previous_headings":"Data wrangling","what":"Data with 3 or more choices","title":"Intro","text":"analyze visualize election results three choices – crowded primary multi-party election, example – use wrangle_more_cols() function. function, results spreadsheet CSV election district (precinct, city, etc.) first column. Vote totals (candidates, parties, etc.) format one column candidate Don’t include total row column, since calculated. wrangle_more_cols() two required arguments: election_results_file, file name; votes_cols, vector character strings vote columns candidate/party/option. votes_cols can also vector integers column index numbers instead names optional argument use_column_numbers set TRUE. Per user request, wrangle_more_cols() also can take name data frame data proper format. name object must quotation marks. wrangle_more_cols() also five optional logical arguments: show_pcts return results percents instead total votes, show_runnerup include column 2nd-place finisher, show_margin display column difference 1st- 2nd-place finishers, show_margin_2vs3 show difference 2nd- 3rd-place finishers, use_column_numbers want use column index numbers instead column names vector vote columns. example , file fake results “Red”, “Blue”, “Green” parties. ’d like show results percents, don’t want column runner : wrangle_more_cols() four optional arguments: show_pcts return results percents instead total votes, show_runnerup include column 2nd-place finisher, show_margin display column difference 1st- 2nd-place finishers, show_margin_2vs3 show difference 2nd- 3rd-place finishers.","code":"myfile <- system.file(\"extdata\", \"Fake3Columns.xlsx\", package = \"elections2\")  mydata <- wrangle_more_cols(myfile, c(\"Red\", \"Blue\", \"Green\"), show_pcts = TRUE, show_runnerup = FALSE) #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  head(mydata) #>     City   Red  Blue Green      Winner Margin #> 1 City A 0.730 0.062 0.208         Red  0.522 #> 2 City B 0.266 0.367 0.367 Blue, Green  0.000 #> 3 City C 0.336 0.332 0.332         Red  0.004 #> 4 City Z   NaN   NaN   NaN                 NA #> 5 City D 0.251 0.496 0.253        Blue  0.243 #> 6 City E 0.314 0.353 0.333        Blue  0.020"},{"path":"https://smach.github.io/elections2/articles/intro.html","id":"visualizations","dir":"Articles","previous_headings":"","what":"Visualizations","title":"Intro","text":"Interactive tables Use quick_table() quick_table_more_cols() functions. See tables vignette vignette(\"tables\", package = \"elections2\") . Bar charts Use bar_graph_of_winner_pct_margins() function. See barcharts vignette vignette(\"barcharts\", package = \"elections2\") info. Election results maps See maps vignette: `vignette(“maps”, package = “elections2”) Turnout maps See turnout maps vignette: `vignette(“map_turnout”, package = “elections2”)","code":""},{"path":"https://smach.github.io/elections2/articles/maps.html","id":"example-1---city-precincts","dir":"Articles","previous_headings":"","what":"Example 1 - City Precincts","title":"Maps","text":"Import election results wrangle_results(results_file) haven’t already. Make sure remove Total row, since shapefile map won’t . make map, ’ll need import shapefile election districts – precincts, cities, counties, states, etc. – R using sf package’s st_read() function. example imports precinct shapefiles city Framingham, Massachusetts. Make sure common column election data GIS file use identical values election districts. can use number ways check two vectors identical. ’m using testthat::expect_equal() gives explanations two objects aren’t equal. Base R identical() just shows TRUE FALSE. data set, need either get rid “P” geometry add results. ’ll get rid geometry turn ordered factors sort correctly table graph. need step, anything, depend specific election-district data. ’m sure identical column values election districts, can join geometry results using merge(). first argument sf geospatial object second argument ‘regular’ data frame, result witll sf object. ’m also going change name resulting district column precinct Precinct show better map. Now can use map_election_results() function. Note need specify names winner column loser column win_col lose_col arguments.","code":"results_file <- system.file(\"extdata\", \"FakeElectionResults.xlsx\", package = \"elections2\")  my_election_data <- wrangle_results(results_file) %>%   dplyr::filter(Precinct != \"Total\") head(my_election_data) #>   Precinct  No Yes Total Winner Yes_Pct No_Pct Yes_Pct_Margin Yes_Margin #> 1        1 603 755  1358    Yes   0.556  0.444          0.112        152 #> 2        2 630 844  1474    Yes   0.573  0.427          0.146        214 #> 3        3 764 657  1421     No   0.462  0.538         -0.076       -107 #> 4        4 585 873  1458    Yes   0.599  0.401          0.198        288 #> 5        5 517 708  1225    Yes   0.578  0.422          0.156        191 #> 6        6 540 748  1288    Yes   0.581  0.419          0.162        208 testthat::expect_equal(   (sort(my_election_data$Precinct)),    sort(my_geometry$precinct) ) #> Error: (sort(my_election_data$Precinct)) not equal to sort(my_geometry$precinct). #> 18/18 mismatches #> x[1]: \"1\" #> y[1]: \"P1\" #>  #> x[2]: \"10\" #> y[2]: \"P10\" #>  #> x[3]: \"11\" #> y[3]: \"P11\" #>  #> x[4]: \"12\" #> y[4]: \"P12\" #>  #> x[5]: \"13\" #> y[5]: \"P13\" my_geometry$precinct <- gsub(\"P\", \"\", my_geometry$precinct)   testthat::expect_equal(   (sort(my_election_data$Precinct)),    sort(my_geometry$precinct) ) election_results_for_map <- merge(my_geometry, my_election_data, by.x = \"precinct\", by.y = \"Precinct\")  class(election_results_for_map) #> [1] \"sf\"         \"data.frame\" names(election_results_for_map)[1] <- \"Precinct\" map_election_results(election_results_for_map, win_col = \"Yes_Pct\", lose_col = \"No_Pct\", election_district_col = \"Precinct\", \"Greens\", \"Purples\")"},{"path":"https://smach.github.io/elections2/articles/maps.html","id":"example-2---cities-and-towns-statewide","dir":"Articles","previous_headings":"","what":"Example 2 - Cities and Towns Statewide","title":"Maps","text":"next example look results city/town Massachusetts ballot question legalizing recreational marijuana use. Import results: CSV file Secretary State’s office, removed commas numerical columns also deleted columns blanks totals, since just want see Yes vs . Next need shapefile Massachusetts cities towns, found Massachusetts GIS website. already imported R, turned place names Title Case, re-projected matches underlying Leaflet basemap. included package R sf object mass_gis. However, still need make sure names communities election results data match GIS data. dplyr’s anti_join() show items my_election_data2 don’t match: Looks like need spell North, South, East, West: ’ll deal last two: ’ll almost always need fiddling like match place names election data place names maps. Now join election results shapefile: , finally, package’s mapping turnout, see map_turnout() function Mapping Turnout vignette.","code":"results_file2 <- system.file(\"extdata\", \"2016_Statewide_Question_4_marijuana.csv\", package = \"elections2\")  my_election_data2 <- wrangle_results(results_file2) head(my_election_data2) #>     Locality   Yes    No Total Winner Yes_Pct No_Pct Yes_Pct_Margin Yes_Margin #> 1 Barnstable 12432 13463 25895     No   0.480  0.520         -0.040      -1031 #> 2     Bourne  5273  5583 10856     No   0.486  0.514         -0.028       -310 #> 3   Brewster  3221  3468  6689     No   0.482  0.518         -0.036       -247 #> 4    Chatham  1928  2611  4539     No   0.425  0.575         -0.150       -683 #> 5     Dennis  4237  5028  9265     No   0.457  0.543         -0.086       -791 #> 6    Eastham  1876  1783  3659    Yes   0.513  0.487          0.026         93 dplyr::anti_join(my_election_data2, mass_gis, by = c(\"Locality\" = \"Place\")) #>                 Locality     Yes      No   Total Winner Yes_Pct No_Pct #> 1               N. Adams    3531    2172    5703    Yes   0.619  0.381 #> 2         W. Stockbridge     541     347     888    Yes   0.609  0.391 #> 3        N. Attleborough    8230    6953   15183    Yes   0.542  0.458 #> 4             W. Tisbury    1578     590    2168    Yes   0.728  0.272 #> 5  Manchester-by-the-Sea    1814    1772    3586    Yes   0.506  0.494 #> 6             N. Andover    7573    8596   16169     No   0.468  0.532 #> 7             W. Newbury    1530    1425    2955    Yes   0.518  0.482 #> 8          E. Longmeadow    4225    4935    9160     No   0.461  0.539 #> 9         W. Springfield    5814    6239   12053     No   0.482  0.518 #> 10             S. Hadley    4779    4445    9224    Yes   0.518  0.482 #> 11            N. Reading    4168    4865    9033     No   0.461  0.539 #> 12        E. Bridgewater    4078    3843    7921    Yes   0.515  0.485 #> 13        W. Bridgewater    2052    2108    4160     No   0.493  0.507 #> 14         E. Brookfield     614     581    1195    Yes   0.514  0.486 #> 15         N. Brookfield    1461    1100    2561    Yes   0.570  0.430 #> 16           W. Boylston    2084    2262    4346     No   0.480  0.520 #> 17         W. Brookfield    1113     965    2078    Yes   0.536  0.464 #> 18                 Total 1769328 1528219 3297547    Yes   0.537  0.463 #>    Yes_Pct_Margin Yes_Margin #> 1           0.238       1359 #> 2           0.218        194 #> 3           0.084       1277 #> 4           0.456        988 #> 5           0.012         42 #> 6          -0.064      -1023 #> 7           0.036        105 #> 8          -0.078       -710 #> 9          -0.036       -425 #> 10          0.036        334 #> 11         -0.078       -697 #> 12          0.030        235 #> 13         -0.014        -56 #> 14          0.028         33 #> 15          0.140        361 #> 16         -0.040       -178 #> 17          0.072        148 #> 18          0.074     241109 my_election_data2 <- my_election_data2 %>%   dplyr::mutate(     Locality = stringr::str_replace(Locality, \"N\\\\.\", \"North\"),     Locality = stringr::str_replace(Locality, \"S\\\\.\", \"South\"),     Locality = stringr::str_replace(Locality, \"E\\\\.\", \"East\"),     Locality = stringr::str_replace(Locality, \"W\\\\.\", \"West\"),   )  dplyr::anti_join(my_election_data2, mass_gis, by = c(\"Locality\" = \"Place\")) #>                Locality     Yes      No   Total Winner Yes_Pct No_Pct #> 1 Manchester-by-the-Sea    1814    1772    3586    Yes   0.506  0.494 #> 2                 Total 1769328 1528219 3297547    Yes   0.537  0.463 #>   Yes_Pct_Margin Yes_Margin #> 1          0.012         42 #> 2          0.074     241109 my_election_data2 <- my_election_data2 %>%   dplyr::mutate(     Locality = stringr::str_replace(Locality, \"Manchester-by-the-Sea\", \"Manchester\")   ) %>%   dplyr::filter(Locality != \"Total\") marijuana_results_for_map <- merge(mass_gis, my_election_data2, by.x = \"Place\", by.y = \"Locality\") map_election_results(marijuana_results_for_map, win_col = \"Yes_Pct\", lose_col = \"No_Pct\", election_district_col = \"Place\", \"Greens\", \"Purples\")"},{"path":"https://smach.github.io/elections2/articles/tables.html","id":"quick_table","dir":"Articles","previous_headings":"","what":"quick_table()","title":"Tables","text":"resulting table’s bar colors set win_color lose_color arguments, default purple green: Turn bar colors setting win_color lose_color “none”: Note ’m setting pagination 5 save space. defaults 20.","code":"myfile <- system.file(\"extdata\", \"FakeElectionResults.xlsx\", package = \"elections2\") my_election_results <- wrangle_results(myfile) quick_table(my_election_results, pagination = 5) quick_table(my_election_results, win_color = \"none\", lose_color = \"none\", pagination = 5)"},{"path":"https://smach.github.io/elections2/articles/tables.html","id":"quick_table_w_bargraphs","dir":"Articles","previous_headings":"","what":"quick_table_w_bargraphs()","title":"Tables","text":"function uses reactable package create bargraphs far right percent margin vote margin columns. winner loser columns also default purple green, can set function’s win_color lose_color arguments. pagination argument sets many rows appear page table.","code":"quick_table_w_bargraphs(my_election_results, pagination = 5, win_color  = \"#c2a5cf\", lose_color = \"#a6dba0\")"},{"path":"https://smach.github.io/elections2/articles/tables.html","id":"quick_table_more_cols","dir":"Articles","previous_headings":"","what":"quick_table_more_cols","title":"Tables","text":"function takes three required arguments: name data frame generated wrangle_more_cols(), vector names columns containing vote choices, show_pcts TRUE data frame displays percents FALSE data frame displays vote totals. also three optional arguments: show_sparklines, whether want column mini bar charts row (defaults TRUE); pagination, number rows display per page (defaults 20); my_palette. my_palette defaults “none”, can specify vector character strings color names hex codes show background colors Winner RunnerUp columns. table showing vote totals instead percent winner color-coded. Ties show color. function can also used generate tables two ballot choices.","code":"myfile <- system.file(\"extdata\", \"Fake3Columns.xlsx\", package = \"elections2\") mydata <- wrangle_more_cols(myfile, c(\"Red\", \"Blue\", \"Green\"), show_pcts = TRUE, show_runnerup = FALSE) #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames quick_table_more_cols(mydata, c(\"Red\", \"Blue\", \"Green\"), show_pcts = TRUE) mydata <- wrangle_more_cols(myfile, c(\"Red\", \"Blue\", \"Green\"), show_pcts = FALSE, show_runnerup = FALSE) #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames quick_table_more_cols(mydata, c(\"Red\", \"Blue\", \"Green\"), show_pcts = FALSE, my_palette = c(\"#DF536B\", \"#2297E6\",\"green\")) myfile <- system.file(\"extdata\", \"MarkeyKennedyFramingham2020.xlsx\", package = \"elections2\") mydata <- wrangle_more_cols(myfile, c(\"Markey\", \"Kennedy\"), show_pcts = FALSE, show_runnerup = FALSE) #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames  #> Warning in xtfrm.data.frame(x): cannot xtfrm data frames quick_table_more_cols(mydata, c(\"Markey\", \"Kennedy\"), show_pcts = FALSE)"},{"path":"https://smach.github.io/elections2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sharon Machlis. Maintainer.","code":""},{"path":"https://smach.github.io/elections2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Machlis S (2022). elections2: Wrangle Visualize Election Data 2 Candidates Choices. https://github.com/smach/elections2, https://smach.github.io/elections2/.","code":"@Manual{,   title = {elections2: Wrangle and Visualize Election Data With 2 Candidates or Choices},   author = {Sharon Machlis},   year = {2022},   note = {https://github.com/smach/elections2, https://smach.github.io/elections2/}, }"},{"path":"https://smach.github.io/elections2/index.html","id":"elections2","dir":"","previous_headings":"","what":"Wrangle and Visualize Election Data With 2 Candidates or Choices","title":"Wrangle and Visualize Election Data With 2 Candidates or Choices","text":"Wrangle Visualize Election Data Easily analyze election results data election2 package. One command calculates winners percents election district row well overall totals. , take results turn interactive tables, bar charts, maps functions like bargraph_of_margins(), quick_table(), map_election_results(). election2 designed journalists, hobbyists, analysts, data geeks want quickly go spreadsheet CSV file raw vote totals visualizations help see trends behind data. Note: package CRAN, need install GitHub R package function choice, devtools::install_github(\"smach/elections2\", build_vignettes = TRUE)","code":""},{"path":"https://smach.github.io/elections2/index.html","id":"data-wrangling","dir":"","previous_headings":"","what":"Data wrangling","title":"Wrangle and Visualize Election Data With 2 Candidates or Choices","text":"use elections2 elections data, start one package functions wrangle spreadsheet CSV file election results. ’ve got two options: wrangle_results() generate detailed results file two candidates choices; wrangle_more_cols() results two choices.","code":""},{"path":"https://smach.github.io/elections2/index.html","id":"data-with-only-2-choices","dir":"","previous_headings":"Data wrangling","what":"Data with only 2 choices","title":"Wrangle and Visualize Election Data With 2 Candidates or Choices","text":"wrangle_results() want compare performance two candidates yes-ballot question. means don’t wish include additional results third parties, write-ins, blanks. function returns winner, percents, percent vote margins row well overall total. function also turnout_columns option data includes columns vote totals total registered voters ’d like calculate turnout percentage. running wrangle_results() data, can use package’s visualization functions results create tables, bar graphs, maps.","code":""},{"path":"https://smach.github.io/elections2/index.html","id":"data-format","dir":"","previous_headings":"Data wrangling > Data with only 2 choices","what":"Data format","title":"Wrangle and Visualize Election Data With 2 Candidates or Choices","text":"wrangle_results() needs data specific format. CSV file spreadsheet doesn’t include turnout data, election results file must following 3-column format: Column 1 election districts (precinct, city, county, etc.). Columns 2 3 candidates’ names, “Yes” “” ballot questions, etc. values raw vote totals percents. include column row totals file! data turnout information, set turnout_columns = TRUE argument wrangle_results(). data needs total number votes column 4 total number registered voters column 5. Don’t include column turnout percent, calculated wrangle_results(). can see result wrangle_results() command : head(my_election_data, n = 3) includes Total row. Per user request, wrangle_results() also can take name data frame data proper format. name object must quotation marks.","code":"library(elections2) results_file <- system.file(\"extdata\", \"FakeElectionResults.xlsx\", package = \"elections2\")  my_election_data <- wrangle_results(results_file)"},{"path":"https://smach.github.io/elections2/index.html","id":"data-with-3-or-more-choices","dir":"","previous_headings":"Data wrangling","what":"Data with 3 or more choices","title":"Wrangle and Visualize Election Data With 2 Candidates or Choices","text":"analyze visualize election results three choices – crowded primary multi-party election, example – use wrangle_more_cols() function. function, results spreadsheet CSV election district (precinct, city, etc.) first column. Vote totals (candidates, parties, etc.) format one column candidate Don’t include total row column, since calculated. wrangle_more_cols() two required arguments: election_results_file, file name; votes_cols, vector character strings vote columns candidate/party/option. votes_cols can also vector integers column index numbers instead names optional argument use_column_numbers set TRUE. Per user request, wrangle_more_cols() also can take name data frame data proper format. name object must quotation marks. wrangle_more_cols() also five optional logical arguments: show_pcts return results percents instead total votes, show_runnerup include column 2nd-place finisher, show_margin display column difference 1st- 2nd-place finishers, show_margin_2vs3 show difference 2nd- 3rd-place finishers, use_column_numbers want use column index numbers instead column names vector vote columns. example , file fake results “Red”, “Blue”, “Green” parties. ’d like show results percents, don’t want column runner : wrangle_more_cols() four optional arguments: show_pcts return results percents instead total votes, show_runnerup include column 2nd-place finisher, show_margin display column difference 1st- 2nd-place finishers, show_margin_2vs3 show difference 2nd- 3rd-place finishers.","code":"myfile <- system.file(\"extdata\", \"Fake3Columns.xlsx\", package = \"elections2\")  mydata <- wrangle_more_cols(myfile, c(\"Red\", \"Blue\", \"Green\"), show_pcts = TRUE, show_runnerup = FALSE)  head(mydata)"},{"path":"https://smach.github.io/elections2/index.html","id":"visualizations","dir":"","previous_headings":"","what":"Visualizations","title":"Wrangle and Visualize Election Data With 2 Candidates or Choices","text":"Interactive tables Use quick_table() quick_table_more_cols() functions. See tables vignette vignette(\"tables\", package = \"elections2\") . Bar charts Use bar_graph_of_winner_pct_margins() function. See barcharts vignette vignette(\"barcharts\", package = \"elections2\") info. Election results maps See maps vignette: `vignette(“maps”, package = “elections2”) Turnout maps See turnout maps vignette: `vignette(“map_turnout”, package = “elections2”)","code":""},{"path":"https://smach.github.io/elections2/reference/bargraph_of_margins.html","id":null,"dir":"Reference","previous_headings":"","what":"Create bar graphs of winner's margin per district by percent or raw votes — bargraph_of_margins","title":"Create bar graphs of winner's margin per district by percent or raw votes — bargraph_of_margins","text":"function expects data format generated wrangle_results() wrangle_more_cols() functions.","code":""},{"path":"https://smach.github.io/elections2/reference/bargraph_of_margins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create bar graphs of winner's margin per district by percent or raw votes — bargraph_of_margins","text":"","code":"bargraph_of_margins(   election_df,   district_col,   margin_col,   headline = \"\",   palette = c(\"#9970ab\", \"#5aae61\", \"#f7f7f7\"),   brewer_palette = FALSE,   winner_col = Winner,   theme = theme_minimal(),   order_bars_desc = FALSE )"},{"path":"https://smach.github.io/elections2/reference/bargraph_of_margins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create bar graphs of winner's margin per district by percent or raw votes — bargraph_of_margins","text":"election_df data frame election results generated wrangle_results() wrangle_more_cols() district_col name election district column quotation marks margin_col name column percent vote margins quotation marks headline character string desired graph headline, defaults \"\" palette brewer_palette FALSE, character string hex colors winner, loser, ties brewer palette TRUE, character string RColorBrewer palette name integer palette number. brewer_palette logical TRUE use RColorBrewer palette winner_col name column winner district quotation marks, defaults Winner. theme ggplot theme function. Defaults theme_minimal() allows easy change theme still using function. order_bars_desc logical bars ordered descending value? Defaults FALSE","code":""},{"path":"https://smach.github.io/elections2/reference/bargraph_of_margins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create bar graphs of winner's margin per district by percent or raw votes — bargraph_of_margins","text":"ggplot object","code":""},{"path":"https://smach.github.io/elections2/reference/bargraph_of_margins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create bar graphs of winner's margin per district by percent or raw votes — bargraph_of_margins","text":"","code":"my_file <- system.file(\"extdata\", \"FakeElectionResults.xlsx\", package = \"elections2\") my_election_results <- wrangle_results(my_file) bargraph_of_margins(my_election_results, Precinct, Yes_Pct_Margin, order_bars_desc = TRUE, headline = \"Yes Margins by Precinct\") #> Warning: Removed 1 rows containing missing values (position_stack)."},{"path":"https://smach.github.io/elections2/reference/framingham_gis.html","id":null,"dir":"Reference","previous_headings":"","what":"Data: Framingham precinct sf object — framingham_gis","title":"Data: Framingham precinct sf object — framingham_gis","text":"geospatial sf object shapefile via city Framingham data portal precinct geometry","code":""},{"path":"https://smach.github.io/elections2/reference/framingham_gis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data: Framingham precinct sf object — framingham_gis","text":"","code":"framingham_gis"},{"path":"https://smach.github.io/elections2/reference/framingham_gis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data: Framingham precinct sf object — framingham_gis","text":"sf object 18 rows 7 variables: district number district number objectid number city object ID precinct character string P precinct number precncts_i number shape_star number shape_stle number geometry sfc_POLYGON precinct geospatial data","code":""},{"path":"https://smach.github.io/elections2/reference/framingham_gis.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data: Framingham precinct sf object — framingham_gis","text":"https://data.framinghamma.gov/Community-Development/Framingham-Districts--Precincts/9pzx-4i9g","code":""},{"path":"https://smach.github.io/elections2/reference/map_election_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate interactive map of election results — map_election_results","title":"Generate interactive map of election results — map_election_results","text":"Requires data wrangle_results() function joined shapefile. See maps vignette info.","code":""},{"path":"https://smach.github.io/elections2/reference/map_election_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate interactive map of election results — map_election_results","text":"","code":"map_election_results(   joined_df,   win_col,   lose_col,   election_district_col,   the_winner_palette = \"Purples\",   the_loser_palette = \"Greens\",   map_tiles = \"CartoDB.Positron\" )"},{"path":"https://smach.github.io/elections2/reference/map_election_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate interactive map of election results — map_election_results","text":"joined_df sf object shapefile election districts joined election result data.table generated wrangle_results() function win_col character string name column winner's data Pct Margin lose_col character string name column loser's data Pct Margin election_district_col character string name column election district data - name 1st column wrangle_results() data frame the_winner_palette character string colors leaflet colorNumeric function the_loser_palette character string colors leaflet colorNumeric function map_tiles character string available leaflet tile providers, defaults \"CartoDB.Positron\". See http://leaflet-extras.github.io/leaflet-providers/preview/ options.","code":""},{"path":"https://smach.github.io/elections2/reference/map_election_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate interactive map of election results — map_election_results","text":"leaflet map object","code":""},{"path":"https://smach.github.io/elections2/reference/map_election_results_2layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate map of election results with 1 candidate per layer — map_election_results_2layers","title":"Generate map of election results with 1 candidate per layer — map_election_results_2layers","text":"Requires data wrangle_results() function joined shapefile. See maps vignette info.","code":""},{"path":"https://smach.github.io/elections2/reference/map_election_results_2layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate map of election results with 1 candidate per layer — map_election_results_2layers","text":"","code":"map_election_results_2layers(   joined_df,   win_col,   lose_col,   election_district_col,   the_winner_palette = \"Purples\",   the_loser_palette = \"Greens\",   map_tiles = \"CartoDB.Positron\" )"},{"path":"https://smach.github.io/elections2/reference/map_election_results_2layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate map of election results with 1 candidate per layer — map_election_results_2layers","text":"joined_df sf object shapefile election districts joined election result data.table generated wrangle_results() function win_col character string name column winner's data Pct Margin lose_col character string name column loser's data Pct Margin election_district_col character string name column election district data - name 1st column wrangle_results() data frame the_winner_palette character string colors leaflet colorNumeric function the_loser_palette character string colors leaflet colorNumeric function map_tiles character string available leaflet tile providers, defaults \"CartoDB.Positron\". See http://leaflet-extras.github.io/leaflet-providers/preview/ options.","code":""},{"path":"https://smach.github.io/elections2/reference/map_election_results_2layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate map of election results with 1 candidate per layer — map_election_results_2layers","text":"leaflet map object","code":""},{"path":"https://smach.github.io/elections2/reference/map_turnout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate interactive map of turnout — map_turnout","title":"Generate interactive map of turnout — map_turnout","text":"Requires data election district turnout percent decimal 0 1 joined shapefile.","code":""},{"path":"https://smach.github.io/elections2/reference/map_turnout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate interactive map of turnout — map_turnout","text":"","code":"map_turnout(   joined_df,   turnout_col,   election_district_col,   the_palette = \"Greens\",   map_tiles = \"CartoDB.Positron\" )"},{"path":"https://smach.github.io/elections2/reference/map_turnout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate interactive map of turnout — map_turnout","text":"joined_df sf object shapefile election districts joined election result turnout_col character string name column turnout data election_district_col character string name column election district data - name 1st column wrangle_results() data frame the_palette character string color leaflet colorNumeric function map_tiles character string available leaflet tile providers, defaults \"CartoDB.Positron\". See http://leaflet-extras.github.io/leaflet-providers/preview/ options.","code":""},{"path":"https://smach.github.io/elections2/reference/map_turnout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate interactive map of turnout — map_turnout","text":"leaflet map object","code":""},{"path":"https://smach.github.io/elections2/reference/mass_gis.html","id":null,"dir":"Reference","previous_headings":"","what":"Data: Massachusetts city and town sf object — mass_gis","title":"Data: Massachusetts city and town sf object — mass_gis","text":"geospatial sf object Massachusetts shapefile via Mass GIS","code":""},{"path":"https://smach.github.io/elections2/reference/mass_gis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data: Massachusetts city and town sf object — mass_gis","text":"","code":"mass_gis"},{"path":"https://smach.github.io/elections2/reference/mass_gis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data: Massachusetts city and town sf object — mass_gis","text":"sf object 351 rows 18 variables: TOWN_ID integer MassGIS Town-ID Code (alphabetical, 1-351) TOWN character string city town name FIPS_STCO number Federal Information Processing Standard (FIPS) State/County Code CCD_MCD character string FIPS_PLACE character string POP1980 number 1980 population POP1990 number 1990 population POP2000 number 2000 population POPCH80_90 number population change POPCH90_00 number population change SHAPE_AREA number SHAPE_LEN number geometry polygon data Place character string TOWN Title Case","code":""},{"path":"https://smach.github.io/elections2/reference/mass_gis.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data: Massachusetts city and town sf object — mass_gis","text":"https://docs.digital.mass.gov/dataset/massgis-data-community-boundaries-towns","code":""},{"path":"https://smach.github.io/elections2/reference/na2zero2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert all NA values to z — na2zero2","title":"Convert all NA values to z — na2zero2","text":"Convert NA values z","code":""},{"path":"https://smach.github.io/elections2/reference/na2zero2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert all NA values to z — na2zero2","text":"","code":"na2zero2(mydf)"},{"path":"https://smach.github.io/elections2/reference/na2zero2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert all NA values to z — na2zero2","text":"mydf data frame","code":""},{"path":"https://smach.github.io/elections2/reference/na2zero2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert all NA values to z — na2zero2","text":"data frame NAs converted 0s","code":""},{"path":"https://smach.github.io/elections2/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://smach.github.io/elections2/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://smach.github.io/elections2/reference/quick_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quick searchable, sortable table of results with the DT package — quick_table","title":"Create a quick searchable, sortable table of results with the DT package — quick_table","text":"Features colored bars percent columns allows searching regular expression","code":""},{"path":"https://smach.github.io/elections2/reference/quick_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quick searchable, sortable table of results with the DT package — quick_table","text":"","code":"quick_table(   election_df,   pagination = 20,   win_color = \"#c2a5cf\",   lose_color = \"#a6dba0\",   use_regex_searching = TRUE,   n_turnout_cols = 0 )"},{"path":"https://smach.github.io/elections2/reference/quick_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quick searchable, sortable table of results with the DT package — quick_table","text":"election_df data table election results generated wrangle_results() including Total row pagination integer many rows display color win_color character string color bar winner's percent column, defaults \"#c2a5cf\" (light purple). Use \"none\" colored bar. lose_color character string color bar winner's percent column, defaults \"#a6dba0\" (light green). Use \"none\" colored bar. use_regex_searching logical whether allow searching regular expression, defaults TRUE n_turnout_cols integer many turnout columns joined election_df: 0 data turnout; 1 column turnout percent ; 3 columns containing total votes cast, total registered voters, percent turnout. Defaults 0.","code":""},{"path":"https://smach.github.io/elections2/reference/quick_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a quick searchable, sortable table of results with the DT package — quick_table","text":"html widget interactive table results","code":""},{"path":"https://smach.github.io/elections2/reference/quick_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a quick searchable, sortable table of results with the DT package — quick_table","text":"","code":"myfile <- system.file(\"extdata\", \"FakeElectionResults.xlsx\", package = \"elections2\") my_election_results <- wrangle_results(myfile) quick_table(my_election_results)  {\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"134\\\" data-max=\\\"8690\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"132\\\" data-max=\\\"7264\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"15954\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;Yes&quot;,&quot;No&quot;,&quot;Tie&quot;,&quot;Unknown&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.333\\\" data-max=\\\"0.654\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.346\\\" data-max=\\\"0.667\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"-0.334\\\" data-max=\\\"0.308000000000001\\\" data-scale=\\\"15\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"-143\\\" data-max=\\\"1426\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"Total\"],[755,844,657,873,708,748,694,682,371,250,747,335,null,231,274,153,134,234,8690],[603,630,764,585,517,540,402,396,254,132,673,426,null,231,310,296,268,237,7264],[1358,1474,1421,1458,1225,1288,1096,1078,625,382,1420,761,0,462,584,449,402,471,15954],[\"Yes\",\"Yes\",\"No\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"No\",\"Unknown\",\"Tie\",\"No\",\"No\",\"No\",\"No\",\"Yes\"],[0.556,0.573,0.462,0.599,0.578,0.581,0.633,0.633,0.594,0.654,0.526,0.44,null,0.5,0.469,0.341,0.333,0.497,0.545],[0.444,0.427,0.538,0.401,0.422,0.419,0.367,0.367,0.406,0.346,0.474,0.56,null,0.5,0.531,0.659,0.667,0.503,0.455],[0.112,0.146,-0.076,0.198,0.156,0.162,0.266,0.266,0.188,0.308,0.052,-0.12,null,0,-0.0620000000000001,-0.318,-0.334,-0.00600000000000001,0.09],[152,214,-107,288,191,208,292,286,117,118,74,-91,null,0,-36,-143,-134,-3,1426]],\"container\":\"<table class=\\\"stripe cell-border hover\\\">\\n  <thead>\\n    <tr>\\n      <th>Precinct<\\/th>\\n      <th>Yes<\\/th>\\n      <th>No<\\/th>\\n      <th>Total<\\/th>\\n      <th>Winner<\\/th>\\n      <th>Yes Pct<\\/th>\\n      <th>No Pct<\\/th>\\n      <th>Yes Pct Margin<\\/th>\\n      <th>Yes Margin<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"search\":{\"regex\":true},\"columnDefs\":[{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[1,2,3,5,6,7,8]}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[10,20,25,50,100],\"rowCallback\":\"function(row, data, displayNum, displayIndex, dataIndex) {\\nvar value=data[5]; $(this.api().cell(row, 5).node()).css({'background':isNaN(parseFloat(value)) || value <= 0.000000 ? '' : 'linear-gradient(90.000000deg, transparent ' + Math.max(1.000000 - value, 0)/1.000000 * 100 + '%, #c2a5cf ' + Math.max(1.000000 - value, 0)/1.000000 * 100 + '%)','background-size':'98% 88%','background-repeat':'no-repeat','background-position':'center'});\\nvar value=data[6]; $(this.api().cell(row, 6).node()).css({'background':isNaN(parseFloat(value)) || value <= 0.000000 ? '' : 'linear-gradient(90.000000deg, transparent ' + Math.max(1.000000 - value, 0)/1.000000 * 100 + '%, #a6dba0 ' + Math.max(1.000000 - value, 0)/1.000000 * 100 + '%)','background-size':'98% 88%','background-repeat':'no-repeat','background-position':'center'});\\n}\"}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\",\"options.rowCallback\"],\"jsHooks\":[]}quick_table(my_election_results, win_color = \"none\", lose_color = \"none\")  {\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"134\\\" data-max=\\\"8690\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"132\\\" data-max=\\\"7264\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"15954\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;Yes&quot;,&quot;No&quot;,&quot;Tie&quot;,&quot;Unknown&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.333\\\" data-max=\\\"0.654\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.346\\\" data-max=\\\"0.667\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"-0.334\\\" data-max=\\\"0.308000000000001\\\" data-scale=\\\"15\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"-143\\\" data-max=\\\"1426\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"Total\"],[755,844,657,873,708,748,694,682,371,250,747,335,null,231,274,153,134,234,8690],[603,630,764,585,517,540,402,396,254,132,673,426,null,231,310,296,268,237,7264],[1358,1474,1421,1458,1225,1288,1096,1078,625,382,1420,761,0,462,584,449,402,471,15954],[\"Yes\",\"Yes\",\"No\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"No\",\"Unknown\",\"Tie\",\"No\",\"No\",\"No\",\"No\",\"Yes\"],[0.556,0.573,0.462,0.599,0.578,0.581,0.633,0.633,0.594,0.654,0.526,0.44,null,0.5,0.469,0.341,0.333,0.497,0.545],[0.444,0.427,0.538,0.401,0.422,0.419,0.367,0.367,0.406,0.346,0.474,0.56,null,0.5,0.531,0.659,0.667,0.503,0.455],[0.112,0.146,-0.076,0.198,0.156,0.162,0.266,0.266,0.188,0.308,0.052,-0.12,null,0,-0.0620000000000001,-0.318,-0.334,-0.00600000000000001,0.09],[152,214,-107,288,191,208,292,286,117,118,74,-91,null,0,-36,-143,-134,-3,1426]],\"container\":\"<table class=\\\"stripe cell-border hover\\\">\\n  <thead>\\n    <tr>\\n      <th>Precinct<\\/th>\\n      <th>Yes<\\/th>\\n      <th>No<\\/th>\\n      <th>Total<\\/th>\\n      <th>Winner<\\/th>\\n      <th>Yes Pct<\\/th>\\n      <th>No Pct<\\/th>\\n      <th>Yes Pct Margin<\\/th>\\n      <th>Yes Margin<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"search\":{\"regex\":true},\"columnDefs\":[{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\"\\\", 0, 3, \\\",\\\", \\\".\\\", true, null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[1,2,3,5,6,7,8]}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[10,20,25,50,100]}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\"],\"jsHooks\":[]}"},{"path":"https://smach.github.io/elections2/reference/quick_table_more_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate table of results with more than 2 columns, including sparkline bar graphs for percent data — quick_table_more_cols","title":"Generate table of results with more than 2 columns, including sparkline bar graphs for percent data — quick_table_more_cols","text":"Generate table results 2 columns, including sparkline bar graphs percent data","code":""},{"path":"https://smach.github.io/elections2/reference/quick_table_more_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate table of results with more than 2 columns, including sparkline bar graphs for percent data — quick_table_more_cols","text":"","code":"quick_table_more_cols(   election_df,   graph_cols,   show_pcts = FALSE,   pagination = 20,   show_sparklines = TRUE,   use_regex_searching = TRUE,   my_palette = c(\"none\") )"},{"path":"https://smach.github.io/elections2/reference/quick_table_more_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate table of results with more than 2 columns, including sparkline bar graphs for percent data — quick_table_more_cols","text":"election_df data table election results generated wrangle_more_cols() function graph_cols vector character strings names columns containing original vote percent results (totals margins) show_pcts logical whether election_df data showing percents opposed vote totals. Defaults FALSE. pagination integer number rows display per page, defaults 20 show_sparklines logical want table include column mini bar charts. Defaults TRUE. my_palette character string colors display Winner RunnerUp columns. Defaults \"none\" color.","code":""},{"path":[]},{"path":"https://smach.github.io/elections2/reference/quick_table_more_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate table of results with more than 2 columns, including sparkline bar graphs for percent data — quick_table_more_cols","text":"","code":"myfile <- system.file(\"extdata\", \"Fake3Columns.xlsx\", package = \"elections2\") mydata <- wrangle_more_cols(myfile, c(\"Red\", \"Blue\", \"Orange\", \"Green\", \"Purple\"), show_pcts = TRUE) #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames quick_table_more_cols(mydata, c(\"Red\", \"Blue\", \"Orange\", \"Green\", \"Purple\"), show_pcts = TRUE, my_palette = c(\"#DF536B\", \"#2297E6\", \"orange\", \"green\", \"purple\"))  {\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.167\\\" data-max=\\\"0.541\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.046\\\" data-max=\\\"0.406\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.08\\\" data-max=\\\"0.202\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.155\\\" data-max=\\\"0.275\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0.062\\\" data-max=\\\"0.222\\\" data-scale=\\\"3\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"0.344\\\" data-scale=\\\"15\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"City A\",\"City B\",\"City C\",\"City Z\",\"City D\",\"City E\",\"City Ties\",\"City F\",\"Total\"],[0.541,0.199,0.232,null,0.205,0.19,0.167,0.192,0.262],[0.046,0.275,0.23,null,0.406,0.214,0.222,0.304,0.233],[0.197,0.104,0.193,null,0.08,0.202,0.167,0.103,0.158],[0.155,0.275,0.23,null,0.207,0.202,0.222,0.21,0.203],[0.062,0.148,0.116,null,0.101,0.191,0.222,0.192,0.144],[\"Red\",\"Blue, Green\",\"Red\",\"\",\"Blue\",\"Blue\",\"Blue, Green, Purple\",\"Blue\",\"Red\"],[\"Orange\",\"\",\"Blue, Green\",\"\",\"Green\",\"Orange, Green\",\"\",\"Green\",\"Blue\"],[0.344,0,0.002,null,0.199,0.012,0,0.094,0.029],[\"<span id=\\\"htmlwidget-ae62f16cdc84fba67b85\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-ae62f16cdc84fba67b85\\\">{\\\"x\\\":{\\\"values\\\":[0.541,0.046,0.197,0.155,0.062],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.541,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-a4f34829b7874e00f899\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-a4f34829b7874e00f899\\\">{\\\"x\\\":{\\\"values\\\":[0.199,0.275,0.104,0.275,0.148],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.275,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-6742028c84363817968f\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-6742028c84363817968f\\\">{\\\"x\\\":{\\\"values\\\":[0.232,0.23,0.193,0.23,0.116],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.232,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-8df8bc0d4e7f7e634de5\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-8df8bc0d4e7f7e634de5\\\">{\\\"x\\\":{\\\"values\\\":[null,null,null,null,null],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":null,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-260a51e69fb801809fbf\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-260a51e69fb801809fbf\\\">{\\\"x\\\":{\\\"values\\\":[0.205,0.406,0.08,0.207,0.101],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.406,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-cdff8a9c162f690afc55\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-cdff8a9c162f690afc55\\\">{\\\"x\\\":{\\\"values\\\":[0.19,0.214,0.202,0.202,0.191],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.214,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-5aa48b02b322016d0a44\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-5aa48b02b322016d0a44\\\">{\\\"x\\\":{\\\"values\\\":[0.167,0.222,0.167,0.222,0.222],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.222,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-b977cdf41e5e8a4ebf25\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-b977cdf41e5e8a4ebf25\\\">{\\\"x\\\":{\\\"values\\\":[0.192,0.304,0.103,0.21,0.192],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.304,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\",\"<span id=\\\"htmlwidget-2f34af632d0798d2e0b3\\\" class=\\\"sparkline html-widget\\\"><\\/span>\\n<script type=\\\"application/json\\\" data-for=\\\"htmlwidget-2f34af632d0798d2e0b3\\\">{\\\"x\\\":{\\\"values\\\":[0.262,0.233,0.158,0.203,0.144],\\\"options\\\":{\\\"type\\\":\\\"bar\\\",\\\"chartRangeMin\\\":0,\\\"chartRangeMax\\\":0.262,\\\"height\\\":20,\\\"width\\\":60},\\\"width\\\":60,\\\"height\\\":20},\\\"evals\\\":[],\\\"jsHooks\\\":[]}<\\/script>\"]],\"container\":\"<table class=\\\"stripe cell-border hover\\\">\\n  <thead>\\n    <tr>\\n      <th>City<\\/th>\\n      <th>Red<\\/th>\\n      <th>Blue<\\/th>\\n      <th>Orange<\\/th>\\n      <th>Green<\\/th>\\n      <th>Purple<\\/th>\\n      <th>Winner<\\/th>\\n      <th>RunnerUp<\\/th>\\n      <th>Margin<\\/th>\\n      <th>Results<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"search\":{\"regex\":true},\"fnDrawCallback\":\"\\nfunction(){\\n  HTMLWidgets.staticRender();\\n}\\n\",\"columnDefs\":[{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,8]}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[10,20,25,50,100],\"rowCallback\":\"function(row, data, displayNum, displayIndex, dataIndex) {\\nvar value=data[6]; $(this.api().cell(row, 6).node()).css({'background-color':value == \\\"Red\\\" ? \\\"#DF536B\\\" : value == \\\"Blue\\\" ? \\\"#2297E6\\\" : value == \\\"Orange\\\" ? \\\"orange\\\" : value == \\\"Green\\\" ? \\\"green\\\" : value == \\\"Purple\\\" ? \\\"purple\\\" : null});\\nvar value=data[7]; $(this.api().cell(row, 7).node()).css({'background-color':value == \\\"Red\\\" ? \\\"#DF536B\\\" : value == \\\"Blue\\\" ? \\\"#2297E6\\\" : value == \\\"Orange\\\" ? \\\"orange\\\" : value == \\\"Green\\\" ? \\\"green\\\" : value == \\\"Purple\\\" ? \\\"purple\\\" : null});\\n}\"}},\"evals\":[\"options.fnDrawCallback\",\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.rowCallback\"],\"jsHooks\":[]}"},{"path":"https://smach.github.io/elections2/reference/quick_table_w_bargraphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive table of results with bar graph for win pct margin — quick_table_w_bargraphs","title":"Create interactive table of results with bar graph for win pct margin — quick_table_w_bargraphs","text":"Create interactive table results bar graph win pct margin","code":""},{"path":"https://smach.github.io/elections2/reference/quick_table_w_bargraphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive table of results with bar graph for win pct margin — quick_table_w_bargraphs","text":"","code":"quick_table_w_bargraphs(   election_df,   pagination = 20,   win_color = \"#c2a5cf\",   lose_color = \"#a6dba0\" )"},{"path":"https://smach.github.io/elections2/reference/quick_table_w_bargraphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive table of results with bar graph for win pct margin — quick_table_w_bargraphs","text":"election_df data frame results wrangle_results() wrangle_more_cols() pagination integer number results page, defaults 20 win_color character string color hex code lose_color character string color hex code","code":""},{"path":"https://smach.github.io/elections2/reference/quick_table_w_bargraphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive table of results with bar graph for win pct margin — quick_table_w_bargraphs","text":"reactable interactive HTML table","code":""},{"path":"https://smach.github.io/elections2/reference/wrangle_more_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Get winner for race with three or more candidates — wrangle_more_cols","title":"Get winner for race with three or more candidates — wrangle_more_cols","text":"Get winner race three candidates","code":""},{"path":"https://smach.github.io/elections2/reference/wrangle_more_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get winner for race with three or more candidates — wrangle_more_cols","text":"","code":"wrangle_more_cols(   election_results_file,   votes_cols,   show_pcts = FALSE,   show_runnerup = TRUE,   show_margin = TRUE,   show_margin_2vs3 = FALSE,   use_column_numbers = FALSE )"},{"path":"https://smach.github.io/elections2/reference/wrangle_more_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get winner for race with three or more candidates — wrangle_more_cols","text":"election_results_file character string name Excel CSV file format election district 1st col. can also use name R data frame already results data R, object name MUST quotation marks. votes_cols vector character strings names columns containing votes (numeric vector use_column_numbers TRUE) show_pcts logical TRUE display results percents. Defaults FALSE vote totals. show_runnerup logical TRUE show 2nd place finisher. Defaults TRUE. show_margin logical TRUE show margin 1st 2nd place. Defaults TRUE. show_margin_2vs3 logical TRUE show margin 2nd 3rd place. Defaults FALSE use_column_numbers logical TRUE use column index numbers instead character strings column names votes_cols. Defaults FALSE.","code":""},{"path":"https://smach.github.io/elections2/reference/wrangle_more_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get winner for race with three or more candidates — wrangle_more_cols","text":"data table results, totals, district winner number votes","code":""},{"path":"https://smach.github.io/elections2/reference/wrangle_more_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get winner for race with three or more candidates — wrangle_more_cols","text":"","code":"myfile <- system.file(\"extdata\", \"Fake3Columns.xlsx\", package = \"elections2\") mydata <- wrangle_more_cols(myfile, c(\"Red\", \"Blue\", \"Green\"), show_pcts = TRUE, show_runnerup = FALSE) #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames #> Warning: cannot xtfrm data frames"},{"path":"https://smach.github.io/elections2/reference/wrangle_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get election winner and loser by election district from spreadsheet or CSV file — wrangle_results","title":"Get election winner and loser by election district from spreadsheet or CSV file — wrangle_results","text":"Get election winner loser election district spreadsheet CSV file","code":""},{"path":"https://smach.github.io/elections2/reference/wrangle_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get election winner and loser by election district from spreadsheet or CSV file — wrangle_results","text":"","code":"wrangle_results(   election_results_file,   turnout_columns = FALSE,   use_column_numbers = FALSE )"},{"path":"https://smach.github.io/elections2/reference/wrangle_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get election winner and loser by election district from spreadsheet or CSV file — wrangle_results","text":"election_results_file Excel CSV file election results two candidates (yes/ballot questions). can also use name R data frame already results data R, object name MUST quotation marks. turnout_columns = FALSE, data 3 required columns: Column 1 precinct, city, county, state, election district; columns 2 3 candidate names (yes , two choices). include column row totals. turnout_columns = TRUE, include columns total votes cast total registered voters (turnout percent). turnout_columns logical TRUE data includes columns total votes cast total registered voters. Defaults FALSE.","code":""},{"path":"https://smach.github.io/elections2/reference/wrangle_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get election winner and loser by election district from spreadsheet or CSV file — wrangle_results","text":"data frame additional columns total votes, winner, winner percent, loser's percent, winner's vote margin, winner's percentage point margin.","code":""},{"path":"https://smach.github.io/elections2/reference/wrangle_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get election winner and loser by election district from spreadsheet or CSV file — wrangle_results","text":"","code":"my_election_results <- wrangle_results(system.file(\"extdata\", \"FakeElectionResults.xlsx\", package = \"elections2\"))"},{"path":"https://smach.github.io/elections2/news/index.html","id":"elections2-060","dir":"Changelog","previous_headings":"","what":"elections2 0.6.0","title":"elections2 0.6.0","text":"Added NEWS.md file track changes package. Added ability select results columns number wrangle_more_cols() function. Added ability use existing R data frame wrangle_results() wrangle_more_cols(). data frame name must quotation marks.","code":""},{"path":"https://smach.github.io/elections2/news/index.html","id":"elections2-070","dir":"Changelog","previous_headings":"","what":"elections2 0.7.0","title":"elections2 0.7.0","text":"Fixed map_election_results() doesn’t throw error one candidate wins every district.","code":""}]
